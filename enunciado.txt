EJERCICIO: ¬°Adopta un amigo peludo! üê∂

Objetivo:
Desarrollar un formulario interactivo para la adopci√≥n de mascotas usando React. El formulario permitir√° a los usuarios buscar y seleccionar una mascota para su nuevo hogar.

Contexto:
En la actualidad, miles de animales esperan ansiosamente un hogar donde ser amados. La Fundaci√≥n Esperanza Animal busca facilitar el proceso de adopci√≥n responsable mediante una plataforma digital.

Tu misi√≥n:
Ser√°s el desarrollador responsable de crear el formulario de adopci√≥n para la web de la fundaci√≥n. Este formulario permitir√° a los usuarios:
‚óè Filtrar por tipo de mascota, estado, edad, sexo, etc.
‚óè Ver fotos y detalles de las mascotas disponibles.
‚óè Completar una solicitud de adopci√≥n con sus datos personales e informaci√≥n sobre su hogar.
‚óè Enviar la solicitud para ser revisada por la fundaci√≥n.

Requisitos:
‚óè Componentes:
    ‚óã Crear componentes para cada secci√≥n del formulario (filtros, lista de mascotas, formulario de solicitud).
    ‚óã Usar props para pasar datos entre componentes.
‚óè State y useState:
    ‚óã Almacenar el estado de los filtros, la lista de mascotas y la solicitud de adopci√≥n usando useState.
    ‚óã Actualizar el estado din√°micamente al interactuar con el formulario.
‚óè Manejo de eventos:
    ‚óã Implementar eventos para filtrar mascotas, seleccionar una mascota y enviar la solicitud.
‚óè Comunicaci√≥n hijo-padre:
    ‚óã Pasar informaci√≥n del componente hijo al componente padre (por ejemplo, la mascota seleccionada).
‚óè Condicionales y listas:
    ‚óã Mostrar la informaci√≥n y las opciones relevantes seg√∫n el estado actual del formulario.
    ‚óã Renderizar una lista de mascotas filtradas din√°micamente.
‚óè Estilos:
    ‚óã Aplicar estilos a los componentes para una interfaz atractiva y f√°cil de usar.
    ‚óã Usar una combinaci√≥n de estilos din√°micos, clases CSS y styled components para mayor flexibilidad.

Recursos adicionales:
‚óè Documentaci√≥n oficial de React: https://es.reactjs.org/
‚óè Gu√≠a de componentes de React: https://es.reactjs.org/docs/components-and-props.html
‚óè Comunicaci√≥n entre componentes: https://es.reactjs.org/docs/lifting-state-up.html
‚óè Condicionales: https://es.reactjs.org/docs/conditional-rendering.html
‚óè Listas: https://es.reactjs.org/docs/lists-and-keys.html
‚óè Styled components: https://styled-components.com/
‚óè CSS modules: https://github.com/css-modules/css-modules

Consejos:
‚óè Divide el formulario en componentes peque√±os y manejables.
‚óè Usa nombres descriptivos para los componentes, props y variables.
‚óè Implementa una buena l√≥gica de validaci√≥n para los datos del formulario.
‚óè Muestra mensajes de error y √©xito al usuario.
‚óè Desarrolla una interfaz intuitiva y atractiva.

¬°Recuerda! Tu trabajo ayudar√° a conectar a las mascotas con sus familias perfectas. ¬°Emp√°pate de la causa y crea un formulario que facilite el proceso de adopci√≥n responsable!

Bonus:
‚óè Integra una API real para obtener la lista de mascotas disponibles: GET https://huachitos.cl/api/animales
‚óè Para el POST de la solicitud, puedes simularla aunque no funcione.

¬°Mucha suerte y √©xito con los perritos! üêï

CUESTIONARIO
1. ¬øC√≥mo se renderiza una lista en React?
     a) Con un bucle for de JavaScript.
     b) Utilizando la funci√≥n map() para mapear sobre un array y retornar elementos.
     c) Con la etiqueta <list> de HTML.
     d) No es posible renderizar listas en React.
     Respuesta correcta: b) Utilizando la funci√≥n map() para mapear sobre un array y retornar elementos.

2. ¬øCu√°l es la forma preferida de aplicar estilos en React?
     a) Usando estilos en l√≠nea con el atributo style.
     b) Creando archivos CSS separados y enlaz√°ndolos en el componente.
     c) Utilizando librer√≠as externas como Bootstrap.
     d) Definiendo estilos en JavaScript usando bibliotecas como Styled Components.
     Respuesta correcta: d) Definiendo estilos en JavaScript usando bibliotecas como Styled Components.

3. ¬øCu√°l de las siguientes opciones describe mejor c√≥mo aplicar estilos condicionalmente en React?
     a) Utilizando media queries en el archivo CSS global.
     b) Escribiendo condiciones en el m√©todo render() para aplicar diferentes estilos.
     c) Usando operadores ternarios o declaraciones if dentro del c√≥digo JSX.
     d) React no admite estilos condicionales.
     Respuesta correcta: c) Usando operadores ternarios o declaraciones if dentro del c√≥digo JSX.

4. ¬øQu√© es una clase din√°mica en React?
     a) Una clase que cambia su nombre en cada renderizado.
     b) Una clase que se define utilizando la palabra clave dynamic.
     c) Una clase que puede recibir diferentes nombres dependiendo de ciertas condiciones o estados.
     d) Una clase que solo se aplica a los componentes de clase en React.
     Respuesta correcta: c) Una clase que puede recibir diferentes nombres dependiendo de ciertas condiciones o estados.

5. ¬øCu√°l de las siguientes opciones describe mejor los "Styled Components" en React?
     a) Componentes que tienen estilos predefinidos por la comunidad.
     b) Componentes que solo aceptan estilos en l√≠nea.
     c) Componentes que encapsulan estilos y l√≥gica en un solo archivo.
     d) Componentes que no admiten estilos en absoluto.
     Respuesta correcta: c) Componentes que encapsulan estilos y l√≥gica en un solo archivo.

6. ¬øQu√© son los CSS Modules en React?
     a) Archivos CSS que se cargan de forma asincr√≥nica.
     b) Archivos CSS que se pueden compartir entre m√∫ltiples componentes.
     c) Archivos CSS que permiten el uso de reglas de estilo locales.
     d) Archivos CSS que solo funcionan con componentes de clase en React.
     Respuesta correcta: c) Archivos CSS que permiten el uso de reglas de estilo locales.

7. ¬øQu√© hace el operador condicional ternario en React?
     a) Permite establecer condiciones en los componentes React.
     b) Define estilos para los componentes de React.
     c) Realiza operaciones matem√°ticas en los componentes de React.
     d) No hay operador condicional ternario en React.
     Respuesta correcta: a) Permite establecer condiciones en los componentes React.

8. ¬øCu√°l es el prop√≥sito principal de utilizar keys en las listas de elementos en React?
     a) Identificar de forma √∫nica cada elemento en una lista.
     b) Aplicar estilos diferentes a cada elemento de la lista.
     c) Definir la longitud de la lista en React.
     d) React no requiere keys en las listas de elementos.
     Respuesta correcta: a) Identificar de forma √∫nica cada elemento en una lista.

9. ¬øC√≥mo puedes aplicar estilos a un componente en React utilizando un archivo CSS Modules?
     a) Importando el archivo CSS y aplic√°ndolo directamente en el componente usando la propiedad style.
     b) Usando la funci√≥n applyStyles() proporcionada por React para vincular el archivo CSS al componente.
     c) Importando el archivo CSS como un objeto y utilizando sus propiedades en el componente.
     d) React no es compatible con estilos externos mediante CSS Modules.
     Respuesta correcta: c) Importando el archivo CSS como un objeto y utilizando sus propiedades en el componente.

10. En el contexto de Styled Components, ¬øqu√© ventajas proporciona la interpolaci√≥n de variables en comparaci√≥n con el uso directo de valores en los estilos?
        a) Permite la creaci√≥n de estilos est√°ticos.
        b) Facilita la reutilizaci√≥n de estilos y la creaci√≥n de temas din√°micos.
        c) Incrementa la complejidad y reduce la legibilidad del c√≥digo.
        d) No hay diferencias significativas entre el uso de variables y valores directos en Styled Components.
        Respuesta correcta: b) Facilita la reutilizaci√≥n de estilos y la creaci√≥n de temas din√°micos.

PARA SABER M√ÅS
Condicionales:
Curso JavaScript: 14. Condicionales - #jonmircha

Estilos:
Curso React: 23. Estilos CSS - jonmircha
